// Code generated by templ@v0.2.364 DO NOT EDIT.

package partials

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func Modal() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div id=\"modal\"><div id=\"modal-underlay\" class=\"modal-underlay\"></div><div class=\"modal-content text-sm font-mono\"><h6 class=\"font-bold\">")
		if err != nil {
			return err
		}
		var_2 := `Join lobby.`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h6><p class=\"lowercase\">")
		if err != nil {
			return err
		}
		var_3 := `Joining a friend? enter the lobby ID to join their game`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p><form action=\"\" class=\"mt-5\"><div id=\"lobby-id-form-group\"><label for=\"lobby-id\"></label><input id=\"lobby-id\" pattern=\"[A-Z0-9]{4}\" class=\"bg-gray-200 rounded-md border-2 border-gray-300 px-3 py-2\" type=\"text\"></div><div class=\"flex gap-x-5 mt-5\"><button id=\"modal-btn\">")
		if err != nil {
			return err
		}
		var_4 := `close modal`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button><button>")
		if err != nil {
			return err
		}
		var_5 := `join lobby`
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></div></form></div></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
